{"title":"PAT-Advanced 热身题","slug":"PAT-Advanced-热身题","date":"2020-04-02T09:59:10.000Z","updated":"2020-04-15T10:04:15.976Z","comments":true,"path":"api/articles/PAT-Advanced-热身题.json","excerpt":"Abstract：基本上就是送分题，尽量写快一点吧","covers":["image-20200402180429421.png","image-20200403171941141.png","image-20200403174240234.png","image-20200403181910338.png","image-20200403204100393.png","image-20200401154141730.png","image-20200413011119370.png","image-20200415165931036.png","image-20200415180343828.png"],"content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css\"><div class=\".article-gallery\" <p><strong>Abstract</strong>：基本上就是送分题，尽量写快一点吧<p></p>\n<a id=\"more\"></a>\n<h1 id=\"1036-Boys-vs-Girls-25分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805453203030016\" target=\"_blank\" rel=\"noopener\">1036 Boys vs Girls (25分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200402180429421.png\" title=\"image-20200402180429421\" class=\"gallery-item\"><img src=\"image-20200402180429421.png\" alt=\"image-20200402180429421\"></a></p>\n<h2 id=\"完整解法\">完整解法</h2>\n<p>模拟题意就行了，没有算法</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n\nstruct Student {      // Input student structure\n\tstd::string name;\n\tchar gender;\n\tstd::string ID;\n\tint grade;\n};\n\n/* Global */\nint num;                    // Input number\nStudent student, girl, boy; // maxGirl &amp; minBoy\n\nvoid ParseInput() {\n\tgirl.grade = -1;\n\tboy.grade = 101;\n\tstd::cin &gt;&gt; num;\n\tfor (int i = 0; i &lt; num; i++) {  // Update max and min if it's exist\n\t\tstd::cin &gt;&gt; student.name &gt;&gt; student.gender &gt;&gt; student.ID &gt;&gt; student.grade;\n\t\tif (student.gender == 'F' &amp;&amp; student.grade &gt; girl.grade) girl = student;\n\t\tif (student.gender == 'M' &amp;&amp; student.grade &lt; boy.grade) boy = student;\n\t}\n}\n\nvoid OutPutStudent(const Student&amp; s) { // give an output of student\n\tstd::cout &lt;&lt; s.name &lt;&lt; &quot; &quot; &lt;&lt; s.ID &lt;&lt; std::endl;\n}\n\nint main() {\n\tParseInput();\n\n\tif (girl.grade != -1) OutPutStudent(girl);\n\telse std::cout &lt;&lt; &quot;Absent&quot; &lt;&lt; std::endl;\n\n\tif (boy.grade != 101) OutPutStudent(boy);\n\telse std::cout &lt;&lt; &quot;Absent&quot; &lt;&lt; std::endl;\n\n\tif (boy.grade == 101 || girl.grade == -1) std::cout &lt;&lt; &quot;NA&quot; &lt;&lt; std::endl;\n\telse std::cout &lt;&lt; girl.grade - boy.grade;\n}\n</code></pre>\n<h2 id=\"压缩版\">压缩版</h2>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\nstruct Student {\n\tstd::string name;\n\tchar gender;\n\tstd::string ID;\n\tint grade;\n};\nint main() {\n\tint num;\n\tstd::cin &gt;&gt; num;\n\tStudent s, girl, boy;\n\tgirl.grade = -1, boy.grade = 101;\n\tfor (int i = 0; i &lt; num; i++) {\n\t\tstd::cin &gt;&gt; s.name &gt;&gt; s.gender &gt;&gt; s.ID &gt;&gt; s.grade;\n\t\tif (s.gender == 'F' &amp;&amp; s.grade &gt; girl.grade) girl = s;\n\t\tif (s.gender == 'M' &amp;&amp; s.grade &lt; boy.grade) boy = s;\n\t}\n\tif (girl.grade != -1) std::cout &lt;&lt; girl.name &lt;&lt; &quot; &quot; &lt;&lt; girl.ID &lt;&lt; std::endl;\n\telse std::cout &lt;&lt; &quot;Absent&quot; &lt;&lt; std::endl;\n\tif (boy.grade != 101) std::cout &lt;&lt; boy.name &lt;&lt; &quot; &quot; &lt;&lt; boy.ID &lt;&lt; std::endl;\n\telse std::cout &lt;&lt; &quot;Absent&quot; &lt;&lt; std::endl;\n\tif (boy.grade == 101 || girl.grade == -1) std::cout &lt;&lt; &quot;NA&quot; &lt;&lt; std::endl;\n\telse std::cout &lt;&lt; girl.grade - boy.grade;\n}\n</code></pre>\n<h1 id=\"1005-Spell-It-Right-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805519074574336\" target=\"_blank\" rel=\"noopener\">1005 Spell It Right (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E6%B0%B4%E9%A2%98%E9%9B%86%E9%94%A6/image-20200403171941141.png\" title=\"image-20200403171941141\" class=\"gallery-item\"><img src=\"image-20200403171941141.png\" alt=\"image-20200403171941141\"></a></p>\n<h2 id=\"完整解法-v2\">完整解法</h2>\n<p>100次方显然是提示我们用字符串读入，所幸只需要逐个相加，那么这个问题就变成了将100个以内的个位数相加再逐个输出对应字符串的幼儿园问题了</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nint sum = 0;\n\nvoid ParseInput() {\n\tstd::string s;\n\tstd::getline(std::cin, s);\n\tfor (int i = 0; i &lt; s.length(); i++) {\n\t\tif (s[i] != 0) sum += s[i] - 48;\n\t}\n}\n\nvoid OutPutN(int num) {\n\tstd::string s = std::to_string(num);\n\tfor (int i = 0; i &lt; s.length();i++) {\n\t\tif (s[i] == '0')std::cout &lt;&lt; &quot;zero&quot;;\n\t\tif (s[i] == '1')std::cout &lt;&lt; &quot;one&quot;;\n\t\tif (s[i] == '2')std::cout &lt;&lt; &quot;two&quot;;\n\t\tif (s[i] == '3')std::cout &lt;&lt; &quot;three&quot;;\n\t\tif (s[i] == '4')std::cout &lt;&lt; &quot;four&quot;;\n\t\tif (s[i] == '5')std::cout &lt;&lt; &quot;five&quot;;\n\t\tif (s[i] == '6')std::cout &lt;&lt; &quot;six&quot;;\n\t\tif (s[i] == '7')std::cout &lt;&lt; &quot;seven&quot;;\n\t\tif (s[i] == '8')std::cout &lt;&lt; &quot;eight&quot;;\n\t\tif (s[i] == '9')std::cout &lt;&lt; &quot;nine&quot;;\n\t\tif (i != s.length() - 1)std::cout &lt;&lt; &quot; &quot;;\n\t}\n}\n\nint main() {\n\tParseInput();\n\tOutPutN(sum);\n}\n</code></pre>\n<h1 id=\"1008-Elevator-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805511923286016\" target=\"_blank\" rel=\"noopener\">1008 Elevator (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200403174240234.png\" title=\"image-20200403174240234\" class=\"gallery-item\"><img src=\"image-20200403174240234.png\" alt=\"image-20200403174240234\"></a></p>\n<h2 id=\"完整解法-v3\">完整解法</h2>\n<p>模拟题意，造一个变量维护上一次的层数，幼儿园题目</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n\nint main() {\n\tint sum = 0, num, curr, prev = 0;\n\tstd::cin &gt;&gt; num;\n\tfor (int i = 0; i &lt; num; i++) {\n\t\tstd::cin &gt;&gt; curr;\n\t\tint diff = curr - prev;\n\t\tif (diff &gt; 0)sum += 6 * diff;\n\t\telse sum += -4 * diff;\n\t\tsum += 5;\n\t\tprev = curr;\n\t}\n\tstd::cout &lt;&lt; sum;\n}\n</code></pre>\n<h1 id=\"1011-World-Cup-Betting-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805504927186944\" target=\"_blank\" rel=\"noopener\">1011 World Cup Betting (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200403181910338.png\" title=\"image-20200403181910338\" class=\"gallery-item\"><img src=\"image-20200403181910338.png\" alt=\"image-20200403181910338\"></a></p>\n<h2 id=\"完整解法-v4\">完整解法</h2>\n<p>题目看着挺长，其实就是求三组最大值这种幼儿园操作</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n\nint main() {\n\tfloat curr,max[3];\n\tfor (int i = 0; i &lt; 3; i++) {\n\t\tchar idx;\n\t\tfor (int j = 0; j &lt; 3; j++) {\n\t\t\tstd::cin &gt;&gt; curr;\n\t\t\tif (curr &gt; max[i]) {\n\t\t\t\tmax[i] = curr;\n\t\t\t\tif (j == 0)idx = 'W';\n\t\t\t\tif (j == 1)idx = 'T';\n\t\t\t\tif (j == 2)idx = 'L';\n\t\t\t}\n\t\t}\n\t\tstd::cout &lt;&lt; idx &lt;&lt; &quot; &quot;;\n\t}\n\tprintf(&quot;%.2f&quot;, (max[0] * max[1] * max[2] * 0.65 - 1) * 2);\n}\n</code></pre>\n<h1 id=\"1015-Reversible-Primes-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805495863296000\" target=\"_blank\" rel=\"noopener\">1015 Reversible Primes (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200403204100393.png\" title=\"image-20200403204100393\" class=\"gallery-item\"><img src=\"image-20200403204100393.png\" alt=\"image-20200403204100393\"></a></p>\n<h1 id=\"完整解法-v5\">完整解法</h1>\n<p>要知道怎么转进制</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nbool isPrime(int num) {\n\tif (num &lt;= 1) return false;\n\tfor (int i = 2; i &lt;= std::sqrt(num); i++) {\n\t\tif (num % i == 0) return false;\n\t}\n\treturn true;\n}\n\nint main() {\n\tint num, radix;\n\twhile (std::cin &gt;&gt; num) {\n\t\tstd::cin &gt;&gt; radix;\n\n\t\t// First check\n\t\tif (!isPrime(num)) {\n\t\t\tstd::cout &lt;&lt; &quot;No&quot; &lt;&lt; std::endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Transform to radix base system\n\t\tint len = 0, arr[100];\n\t\tdo {\n\t\t\tarr[len++] = num % radix;\n\t\t\tnum = num / radix;\n\t\t} while (num != 0);\n\t\tfor (int i = 0; i &lt; len; i++)\n\t\t\tnum = num * radix + arr[i];\n\n\t\t// Second check\n\t\tif (!isPrime(num))std::cout &lt;&lt; &quot;No&quot; &lt;&lt; std::endl;\n\t\telse std::cout &lt;&lt; &quot;Yes&quot; &lt;&lt; std::endl;\n\t}\n}\n</code></pre>\n<h1 id=\"1001-A-B-Format-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805528788582400\" target=\"_blank\" rel=\"noopener\">1001 A+B Format (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E6%B0%B4%E9%A2%98%E9%9B%86%E9%94%A6/image-20200401154141730.png\" title=\"image-20200401154141730\" class=\"gallery-item\"><img src=\"image-20200401154141730.png\" alt=\"image-20200401154141730\"></a></p>\n<h2 id=\"解法一\">解法一</h2>\n<ul>\n<li>每三个数加入一个逗号</li>\n<li>记得处理零，负号以及头部的逗号</li>\n</ul>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n\n// Parse number to string\nstd::string toString(int x) {\n\tstd::string ans = &quot;&quot;;\n\tint count = 0;\n\twhile (x != 0) {\n\t\tchar n = x % 10;\n\t\tans += n+48;\n\t\tcount++;\n\t\tif (count % 3 == 0)ans += ',';\n\t\tx /= 10;\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint a, b;\n\tstd::cin &gt;&gt; a &gt;&gt; b;\n\tstd::string str;\n\tint number = a + b;\n\t// Zero\n\tif (number == 0) {\n\t\tstd::cout &lt;&lt; 0;\n\t\treturn 0;\n\t}\n\t// Negative\n\telse if (number &lt; 0) {\n\t\tstr = toString(-(number));\n\t\tstd::cout &lt;&lt; '-';\n\t}\n\t// Positive\n\telse str = toString(number);\n\n\t// Linear scan\n\tint len = str.length();\n\tfor (int i = len-1 ; i &gt; -1;i--) {\n\t\tif (i == len - 1 &amp;&amp; str.at(i) == ',')continue;\n\t\telse std::cout &lt;&lt; str.at(i);\n\t}\n}\n</code></pre>\n<h2 id=\"解法二：to-string（）\">解法二：to_string（）</h2>\n<p>to_string很方便，但是要动态输出逗号</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\nint main() {\n    int a, b;\n    std::cin &gt;&gt; a &gt;&gt; b;\n    std::string s = std::to_string(a + b);\n    int len = s.length();\n    for (int i = 0; i &lt; len; i++) {\n        std::cout &lt;&lt; s.at(i);\n        if (s.at(i) == '-') continue;\n        if ((i + 1) % 3 == len % 3 ) std::cout &lt;&lt; &quot;,&quot;;\n    }\n    return 0;\n}\n</code></pre>\n<h1 id=\"1041-Be-Unique-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805444361437184\" target=\"_blank\" rel=\"noopener\">1041 Be Unique (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200413011119370.png\" title=\"image-20200413011119370\" class=\"gallery-item\"><img src=\"image-20200413011119370.png\" alt=\"image-20200413011119370\"></a></p>\n<h2 id=\"解法一：std-unordered-map\">解法一：std::unordered_map</h2>\n<p>很简单，但是要注意unordered_map遍历时key是无插入序的，所以另外维护一个vector来记录插入顺序</p>\n<pre><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;unordered_map&gt;\n#include&lt;vector&gt;\n\nint num, val;\nstd::unordered_map&lt;int,int&gt; map;\nstd::vector&lt;int&gt; order;\n\nint main() {\n\tstd::cin &gt;&gt; num;\n\torder = std::vector&lt;int&gt;(num);\n\tfor (int i = 0; i &lt; num; i++) {\n\t\tstd::cin &gt;&gt; order[i];\n\t\tif (map.find(order[i]) == map.end())\n\t\t\tmap.insert({ order[i], 1 });\n\t\telse map[order[i]]++;\n\t}\n\n\tfor(int i : order)\n\t\tif (map[i] == 1) {\n\t\t\tstd::cout &lt;&lt; i;\n\t\t\treturn 0;\n\t\t}\n\tstd::cout &lt;&lt; &quot;None&quot;;\t\n}\n</code></pre>\n<h2 id=\"解法二：数组hashmap\">解法二：数组hashmap</h2>\n<p>同上</p>\n<pre><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;unordered_map&gt;\n#include&lt;vector&gt;\n\nint num, map[100001] = { 0 };\nstd::vector&lt;int&gt; order;\n\nint main() {\n\tstd::cin &gt;&gt; num;\n\torder = std::vector&lt;int&gt;(num);\n\tfor (int i = 0; i &lt; num; i++) {\n\t\tstd::cin &gt;&gt; order[i];\n\t\tmap[order[i]]++;\n\t}\n\n\tfor (int i : order) {\n\t\tif (map[i] == 1) {\n\t\t\tstd::cout &lt;&lt; i;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tstd::cout &lt;&lt; &quot;None&quot;;\t\n}\n</code></pre>\n<h1 id=\"1027-Colors-in-Mars-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805470349344768\" target=\"_blank\" rel=\"noopener\">1027 Colors in Mars (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200415165931036.png\" title=\"image-20200415165931036\" class=\"gallery-item\"><img src=\"image-20200415165931036.png\" alt=\"image-20200415165931036\"></a></p>\n<h2 id=\"解法一-v2\">解法一</h2>\n<p>跟柳神学的进制转换小技巧​，就很实用​</p>\n<pre><code class=\"language-cpp\">#include&lt;iostream&gt;\n\nint main() {\n\tconst char* c = &quot;0123456789ABC&quot;;\n\tint val;\n\tstd::cout &lt;&lt; '#';\n\tfor (int i = 0; i &lt; 3; i++) {\n\t\tstd::cin &gt;&gt; val;\n\t\tstd::cout &lt;&lt; c[val / 13] &lt;&lt; c[val % 13];\n\t}\n}\n</code></pre>\n<h1 id=\"1019-General-Palindromic-Number-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805487143337984\" target=\"_blank\" rel=\"noopener\">1019 General Palindromic Number (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200415180343828.png\" title=\"image-20200415180343828\" class=\"gallery-item\"><img src=\"image-20200415180343828.png\" alt=\"image-20200415180343828\"></a></p>\n<h2 id=\"解法一-v3\">解法一</h2>\n<p>进制转换 + 回文</p>\n<pre><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;vector&gt;\n\nbool isPalindromic(std::vector&lt;int&gt; num) {\n\tint lo = 0, hi = num.size() - 1;\n\twhile (lo &lt; hi) {\n\t\tif (num[lo] != num[hi]) return false;\n\t\tlo++; hi--;\n\t}\n\treturn true;\n}\n\nvoid toGeneral(int n, int b, std::vector&lt;int&gt;&amp; num) {\n\twhile (n != 0) {\n\t\tnum.push_back(n % b);\n\t\tn /= b;\n\t}\n}\n\nint main() {\n\tint n, b;\n\tstd::ios::sync_with_stdio(false); std::cin.tie(0);\n\tstd::cin &gt;&gt; n &gt;&gt; b;\n\n\tstd::vector&lt;int&gt; num;\n\ttoGeneral(n, b, num);\n\n\tif (isPalindromic(num)) std::cout &lt;&lt; &quot;Yes&quot; &lt;&lt; std::endl;\n\telse std::cout &lt;&lt; &quot;No&quot; &lt;&lt; std::endl;\n\n\tfor (int i = num.size() - 1; i &gt; -1; i--) {\n\t\tif (i == 0) std::cout &lt;&lt; num[i];\n\t\telse std::cout &lt;&lt; num[i] &lt;&lt; &quot; &quot;;\n\t}\n}\n</code></pre>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","more":"<h1 id=\"1036-Boys-vs-Girls-25分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805453203030016\" target=\"_blank\" rel=\"noopener\">1036 Boys vs Girls (25分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200402180429421.png\" title=\"image-20200402180429421\" class=\"gallery-item\"><img src=\"image-20200402180429421.png\" alt=\"image-20200402180429421\"></a></p>\n<h2 id=\"完整解法\">完整解法</h2>\n<p>模拟题意就行了，没有算法</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n\nstruct Student {      // Input student structure\n\tstd::string name;\n\tchar gender;\n\tstd::string ID;\n\tint grade;\n};\n\n/* Global */\nint num;                    // Input number\nStudent student, girl, boy; // maxGirl &amp; minBoy\n\nvoid ParseInput() {\n\tgirl.grade = -1;\n\tboy.grade = 101;\n\tstd::cin &gt;&gt; num;\n\tfor (int i = 0; i &lt; num; i++) {  // Update max and min if it's exist\n\t\tstd::cin &gt;&gt; student.name &gt;&gt; student.gender &gt;&gt; student.ID &gt;&gt; student.grade;\n\t\tif (student.gender == 'F' &amp;&amp; student.grade &gt; girl.grade) girl = student;\n\t\tif (student.gender == 'M' &amp;&amp; student.grade &lt; boy.grade) boy = student;\n\t}\n}\n\nvoid OutPutStudent(const Student&amp; s) { // give an output of student\n\tstd::cout &lt;&lt; s.name &lt;&lt; &quot; &quot; &lt;&lt; s.ID &lt;&lt; std::endl;\n}\n\nint main() {\n\tParseInput();\n\n\tif (girl.grade != -1) OutPutStudent(girl);\n\telse std::cout &lt;&lt; &quot;Absent&quot; &lt;&lt; std::endl;\n\n\tif (boy.grade != 101) OutPutStudent(boy);\n\telse std::cout &lt;&lt; &quot;Absent&quot; &lt;&lt; std::endl;\n\n\tif (boy.grade == 101 || girl.grade == -1) std::cout &lt;&lt; &quot;NA&quot; &lt;&lt; std::endl;\n\telse std::cout &lt;&lt; girl.grade - boy.grade;\n}\n</code></pre>\n<h2 id=\"压缩版\">压缩版</h2>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\nstruct Student {\n\tstd::string name;\n\tchar gender;\n\tstd::string ID;\n\tint grade;\n};\nint main() {\n\tint num;\n\tstd::cin &gt;&gt; num;\n\tStudent s, girl, boy;\n\tgirl.grade = -1, boy.grade = 101;\n\tfor (int i = 0; i &lt; num; i++) {\n\t\tstd::cin &gt;&gt; s.name &gt;&gt; s.gender &gt;&gt; s.ID &gt;&gt; s.grade;\n\t\tif (s.gender == 'F' &amp;&amp; s.grade &gt; girl.grade) girl = s;\n\t\tif (s.gender == 'M' &amp;&amp; s.grade &lt; boy.grade) boy = s;\n\t}\n\tif (girl.grade != -1) std::cout &lt;&lt; girl.name &lt;&lt; &quot; &quot; &lt;&lt; girl.ID &lt;&lt; std::endl;\n\telse std::cout &lt;&lt; &quot;Absent&quot; &lt;&lt; std::endl;\n\tif (boy.grade != 101) std::cout &lt;&lt; boy.name &lt;&lt; &quot; &quot; &lt;&lt; boy.ID &lt;&lt; std::endl;\n\telse std::cout &lt;&lt; &quot;Absent&quot; &lt;&lt; std::endl;\n\tif (boy.grade == 101 || girl.grade == -1) std::cout &lt;&lt; &quot;NA&quot; &lt;&lt; std::endl;\n\telse std::cout &lt;&lt; girl.grade - boy.grade;\n}\n</code></pre>\n<h1 id=\"1005-Spell-It-Right-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805519074574336\" target=\"_blank\" rel=\"noopener\">1005 Spell It Right (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E6%B0%B4%E9%A2%98%E9%9B%86%E9%94%A6/image-20200403171941141.png\" title=\"image-20200403171941141\" class=\"gallery-item\"><img src=\"image-20200403171941141.png\" alt=\"image-20200403171941141\"></a></p>\n<h2 id=\"完整解法-v2\">完整解法</h2>\n<p>100次方显然是提示我们用字符串读入，所幸只需要逐个相加，那么这个问题就变成了将100个以内的个位数相加再逐个输出对应字符串的幼儿园问题了</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nint sum = 0;\n\nvoid ParseInput() {\n\tstd::string s;\n\tstd::getline(std::cin, s);\n\tfor (int i = 0; i &lt; s.length(); i++) {\n\t\tif (s[i] != 0) sum += s[i] - 48;\n\t}\n}\n\nvoid OutPutN(int num) {\n\tstd::string s = std::to_string(num);\n\tfor (int i = 0; i &lt; s.length();i++) {\n\t\tif (s[i] == '0')std::cout &lt;&lt; &quot;zero&quot;;\n\t\tif (s[i] == '1')std::cout &lt;&lt; &quot;one&quot;;\n\t\tif (s[i] == '2')std::cout &lt;&lt; &quot;two&quot;;\n\t\tif (s[i] == '3')std::cout &lt;&lt; &quot;three&quot;;\n\t\tif (s[i] == '4')std::cout &lt;&lt; &quot;four&quot;;\n\t\tif (s[i] == '5')std::cout &lt;&lt; &quot;five&quot;;\n\t\tif (s[i] == '6')std::cout &lt;&lt; &quot;six&quot;;\n\t\tif (s[i] == '7')std::cout &lt;&lt; &quot;seven&quot;;\n\t\tif (s[i] == '8')std::cout &lt;&lt; &quot;eight&quot;;\n\t\tif (s[i] == '9')std::cout &lt;&lt; &quot;nine&quot;;\n\t\tif (i != s.length() - 1)std::cout &lt;&lt; &quot; &quot;;\n\t}\n}\n\nint main() {\n\tParseInput();\n\tOutPutN(sum);\n}\n</code></pre>\n<h1 id=\"1008-Elevator-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805511923286016\" target=\"_blank\" rel=\"noopener\">1008 Elevator (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200403174240234.png\" title=\"image-20200403174240234\" class=\"gallery-item\"><img src=\"image-20200403174240234.png\" alt=\"image-20200403174240234\"></a></p>\n<h2 id=\"完整解法-v3\">完整解法</h2>\n<p>模拟题意，造一个变量维护上一次的层数，幼儿园题目</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n\nint main() {\n\tint sum = 0, num, curr, prev = 0;\n\tstd::cin &gt;&gt; num;\n\tfor (int i = 0; i &lt; num; i++) {\n\t\tstd::cin &gt;&gt; curr;\n\t\tint diff = curr - prev;\n\t\tif (diff &gt; 0)sum += 6 * diff;\n\t\telse sum += -4 * diff;\n\t\tsum += 5;\n\t\tprev = curr;\n\t}\n\tstd::cout &lt;&lt; sum;\n}\n</code></pre>\n<h1 id=\"1011-World-Cup-Betting-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805504927186944\" target=\"_blank\" rel=\"noopener\">1011 World Cup Betting (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200403181910338.png\" title=\"image-20200403181910338\" class=\"gallery-item\"><img src=\"image-20200403181910338.png\" alt=\"image-20200403181910338\"></a></p>\n<h2 id=\"完整解法-v4\">完整解法</h2>\n<p>题目看着挺长，其实就是求三组最大值这种幼儿园操作</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n\nint main() {\n\tfloat curr,max[3];\n\tfor (int i = 0; i &lt; 3; i++) {\n\t\tchar idx;\n\t\tfor (int j = 0; j &lt; 3; j++) {\n\t\t\tstd::cin &gt;&gt; curr;\n\t\t\tif (curr &gt; max[i]) {\n\t\t\t\tmax[i] = curr;\n\t\t\t\tif (j == 0)idx = 'W';\n\t\t\t\tif (j == 1)idx = 'T';\n\t\t\t\tif (j == 2)idx = 'L';\n\t\t\t}\n\t\t}\n\t\tstd::cout &lt;&lt; idx &lt;&lt; &quot; &quot;;\n\t}\n\tprintf(&quot;%.2f&quot;, (max[0] * max[1] * max[2] * 0.65 - 1) * 2);\n}\n</code></pre>\n<h1 id=\"1015-Reversible-Primes-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805495863296000\" target=\"_blank\" rel=\"noopener\">1015 Reversible Primes (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200403204100393.png\" title=\"image-20200403204100393\" class=\"gallery-item\"><img src=\"image-20200403204100393.png\" alt=\"image-20200403204100393\"></a></p>\n<h1 id=\"完整解法-v5\">完整解法</h1>\n<p>要知道怎么转进制</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nbool isPrime(int num) {\n\tif (num &lt;= 1) return false;\n\tfor (int i = 2; i &lt;= std::sqrt(num); i++) {\n\t\tif (num % i == 0) return false;\n\t}\n\treturn true;\n}\n\nint main() {\n\tint num, radix;\n\twhile (std::cin &gt;&gt; num) {\n\t\tstd::cin &gt;&gt; radix;\n\n\t\t// First check\n\t\tif (!isPrime(num)) {\n\t\t\tstd::cout &lt;&lt; &quot;No&quot; &lt;&lt; std::endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Transform to radix base system\n\t\tint len = 0, arr[100];\n\t\tdo {\n\t\t\tarr[len++] = num % radix;\n\t\t\tnum = num / radix;\n\t\t} while (num != 0);\n\t\tfor (int i = 0; i &lt; len; i++)\n\t\t\tnum = num * radix + arr[i];\n\n\t\t// Second check\n\t\tif (!isPrime(num))std::cout &lt;&lt; &quot;No&quot; &lt;&lt; std::endl;\n\t\telse std::cout &lt;&lt; &quot;Yes&quot; &lt;&lt; std::endl;\n\t}\n}\n</code></pre>\n<h1 id=\"1001-A-B-Format-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805528788582400\" target=\"_blank\" rel=\"noopener\">1001 A+B Format (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E6%B0%B4%E9%A2%98%E9%9B%86%E9%94%A6/image-20200401154141730.png\" title=\"image-20200401154141730\" class=\"gallery-item\"><img src=\"image-20200401154141730.png\" alt=\"image-20200401154141730\"></a></p>\n<h2 id=\"解法一\">解法一</h2>\n<ul>\n<li>每三个数加入一个逗号</li>\n<li>记得处理零，负号以及头部的逗号</li>\n</ul>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n\n// Parse number to string\nstd::string toString(int x) {\n\tstd::string ans = &quot;&quot;;\n\tint count = 0;\n\twhile (x != 0) {\n\t\tchar n = x % 10;\n\t\tans += n+48;\n\t\tcount++;\n\t\tif (count % 3 == 0)ans += ',';\n\t\tx /= 10;\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint a, b;\n\tstd::cin &gt;&gt; a &gt;&gt; b;\n\tstd::string str;\n\tint number = a + b;\n\t// Zero\n\tif (number == 0) {\n\t\tstd::cout &lt;&lt; 0;\n\t\treturn 0;\n\t}\n\t// Negative\n\telse if (number &lt; 0) {\n\t\tstr = toString(-(number));\n\t\tstd::cout &lt;&lt; '-';\n\t}\n\t// Positive\n\telse str = toString(number);\n\n\t// Linear scan\n\tint len = str.length();\n\tfor (int i = len-1 ; i &gt; -1;i--) {\n\t\tif (i == len - 1 &amp;&amp; str.at(i) == ',')continue;\n\t\telse std::cout &lt;&lt; str.at(i);\n\t}\n}\n</code></pre>\n<h2 id=\"解法二：to-string（）\">解法二：to_string（）</h2>\n<p>to_string很方便，但是要动态输出逗号</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\nint main() {\n    int a, b;\n    std::cin &gt;&gt; a &gt;&gt; b;\n    std::string s = std::to_string(a + b);\n    int len = s.length();\n    for (int i = 0; i &lt; len; i++) {\n        std::cout &lt;&lt; s.at(i);\n        if (s.at(i) == '-') continue;\n        if ((i + 1) % 3 == len % 3 ) std::cout &lt;&lt; &quot;,&quot;;\n    }\n    return 0;\n}\n</code></pre>\n<h1 id=\"1041-Be-Unique-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805444361437184\" target=\"_blank\" rel=\"noopener\">1041 Be Unique (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200413011119370.png\" title=\"image-20200413011119370\" class=\"gallery-item\"><img src=\"image-20200413011119370.png\" alt=\"image-20200413011119370\"></a></p>\n<h2 id=\"解法一：std-unordered-map\">解法一：std::unordered_map</h2>\n<p>很简单，但是要注意unordered_map遍历时key是无插入序的，所以另外维护一个vector来记录插入顺序</p>\n<pre><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;unordered_map&gt;\n#include&lt;vector&gt;\n\nint num, val;\nstd::unordered_map&lt;int,int&gt; map;\nstd::vector&lt;int&gt; order;\n\nint main() {\n\tstd::cin &gt;&gt; num;\n\torder = std::vector&lt;int&gt;(num);\n\tfor (int i = 0; i &lt; num; i++) {\n\t\tstd::cin &gt;&gt; order[i];\n\t\tif (map.find(order[i]) == map.end())\n\t\t\tmap.insert({ order[i], 1 });\n\t\telse map[order[i]]++;\n\t}\n\n\tfor(int i : order)\n\t\tif (map[i] == 1) {\n\t\t\tstd::cout &lt;&lt; i;\n\t\t\treturn 0;\n\t\t}\n\tstd::cout &lt;&lt; &quot;None&quot;;\t\n}\n</code></pre>\n<h2 id=\"解法二：数组hashmap\">解法二：数组hashmap</h2>\n<p>同上</p>\n<pre><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;unordered_map&gt;\n#include&lt;vector&gt;\n\nint num, map[100001] = { 0 };\nstd::vector&lt;int&gt; order;\n\nint main() {\n\tstd::cin &gt;&gt; num;\n\torder = std::vector&lt;int&gt;(num);\n\tfor (int i = 0; i &lt; num; i++) {\n\t\tstd::cin &gt;&gt; order[i];\n\t\tmap[order[i]]++;\n\t}\n\n\tfor (int i : order) {\n\t\tif (map[i] == 1) {\n\t\t\tstd::cout &lt;&lt; i;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tstd::cout &lt;&lt; &quot;None&quot;;\t\n}\n</code></pre>\n<h1 id=\"1027-Colors-in-Mars-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805470349344768\" target=\"_blank\" rel=\"noopener\">1027 Colors in Mars (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200415165931036.png\" title=\"image-20200415165931036\" class=\"gallery-item\"><img src=\"image-20200415165931036.png\" alt=\"image-20200415165931036\"></a></p>\n<h2 id=\"解法一-v2\">解法一</h2>\n<p>跟柳神学的进制转换小技巧​，就很实用​</p>\n<pre><code class=\"language-cpp\">#include&lt;iostream&gt;\n\nint main() {\n\tconst char* c = &quot;0123456789ABC&quot;;\n\tint val;\n\tstd::cout &lt;&lt; '#';\n\tfor (int i = 0; i &lt; 3; i++) {\n\t\tstd::cin &gt;&gt; val;\n\t\tstd::cout &lt;&lt; c[val / 13] &lt;&lt; c[val % 13];\n\t}\n}\n</code></pre>\n<h1 id=\"1019-General-Palindromic-Number-20分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805487143337984\" target=\"_blank\" rel=\"noopener\">1019 General Palindromic Number (20分)</a></h1>\n<p><a href=\"PAT-Advanced-%E7%83%AD%E8%BA%AB%E9%A2%98/image-20200415180343828.png\" title=\"image-20200415180343828\" class=\"gallery-item\"><img src=\"image-20200415180343828.png\" alt=\"image-20200415180343828\"></a></p>\n<h2 id=\"解法一-v3\">解法一</h2>\n<p>进制转换 + 回文</p>\n<pre><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;vector&gt;\n\nbool isPalindromic(std::vector&lt;int&gt; num) {\n\tint lo = 0, hi = num.size() - 1;\n\twhile (lo &lt; hi) {\n\t\tif (num[lo] != num[hi]) return false;\n\t\tlo++; hi--;\n\t}\n\treturn true;\n}\n\nvoid toGeneral(int n, int b, std::vector&lt;int&gt;&amp; num) {\n\twhile (n != 0) {\n\t\tnum.push_back(n % b);\n\t\tn /= b;\n\t}\n}\n\nint main() {\n\tint n, b;\n\tstd::ios::sync_with_stdio(false); std::cin.tie(0);\n\tstd::cin &gt;&gt; n &gt;&gt; b;\n\n\tstd::vector&lt;int&gt; num;\n\ttoGeneral(n, b, num);\n\n\tif (isPalindromic(num)) std::cout &lt;&lt; &quot;Yes&quot; &lt;&lt; std::endl;\n\telse std::cout &lt;&lt; &quot;No&quot; &lt;&lt; std::endl;\n\n\tfor (int i = num.size() - 1; i &gt; -1; i--) {\n\t\tif (i == 0) std::cout &lt;&lt; num[i];\n\t\telse std::cout &lt;&lt; num[i] &lt;&lt; &quot; &quot;;\n\t}\n}\n</code></pre>\n<script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","categories":[{"name":"Algorithm","path":"api/categories/Algorithm.json"}],"tags":[{"name":"PAT-Advanced","path":"api/tags/PAT-Advanced.json"}]}