{"title":"Sliding Window","slug":"Slide-Window","date":"2020-03-06T13:12:24.000Z","updated":"2020-03-06T14:44:05.948Z","comments":true,"path":"api/articles/Slide-Window.json","excerpt":"Abstract：leetcode sliding window专题","covers":["image-20200306211403971.png","image-20200306213641525.png"],"content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css\"><div class=\".article-gallery\" <p><strong>Abstract</strong>：leetcode sliding window专题<p></p>\n<a id=\"more\"></a>\n<h1 id=\"面试题57-II-和为s的连续正数序列-Easy\"><a href=\"https://leetcode-cn.com/problems/he-wei-sde-lian-xu-zheng-shu-xu-lie-lcof/\" target=\"_blank\" rel=\"noopener\">面试题57 - II. 和为s的连续正数序列[Easy]</a></h1>\n<p><a href=\"Slide-Window/image-20200306211403971.png\" title=\"image-20200306211403971\" class=\"gallery-item\"><img src=\"image-20200306211403971.png\" alt=\"image-20200306211403971\"></a></p>\n<h2 id=\"解法一：滑动窗口\">解法一：滑动窗口</h2>\n<p><input type=\"checkbox\" id=\"checkbox0\"><label for=\"checkbox0\">[ ]</label></p>\n<ul>\n<li>标准的滑动窗口题：如果大了左边界++，如果小了右边界++，如果正好则记录答案</li>\n<li>直接贴解法，很直观了</li>\n</ul>\n<pre><code class=\"language-java\">class Solution {\n    public int[][] findContinuousSequence(int target) {\n        List&lt;int[]&gt; list=new ArrayList&lt;int[]&gt;();\n        int lo=1,hi=1,sum=0;\n        while(lo&lt;=target/2 ){ //lo最多等于target/2\n            if(sum&lt;target){   \n                sum+=hi++;    //右边界++\n            }\n            else if(sum&gt;target){\n                sum-=lo++;    //左边界++，sum回溯\n            }\n            else{               //有解\n                int[] ans=new int[hi-lo];\n                for(int i=0;i&lt;hi-lo;i++)ans[i]=i+lo;\n                list.add(ans);\n                sum-=lo++;      //记录解之后左边界++，sum回溯\n            }\n        }\n        return list.toArray(new int[list.size()][]); //转回二维数组\n    }\n}\n</code></pre>\n<h1 id=\"3-Longest-Substring-Without-Repeating-Characters-Medium\"><a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/\" target=\"_blank\" rel=\"noopener\">3. Longest Substring Without Repeating Characters[Medium]</a></h1>\n<p><a href=\"Slide-Window/image-20200306213641525.png\" title=\"image-20200306213641525\" class=\"gallery-item\"><img src=\"image-20200306213641525.png\" alt=\"image-20200306213641525\"></a></p>\n<h1 id=\"解法二：HashSet滑动窗口\">解法二：HashSet滑动窗口</h1>\n<p>不需要回溯，当遇到重复时，只需要remove左边就行了，这样就是一次遍历</p>\n<pre><code class=\"language-java\">public class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        int n = s.length();\n        Set&lt;Character&gt; set = new HashSet&lt;&gt;();\n        int i=0, j=0,len=0;\n        while (i&lt;n &amp;&amp; j&lt;n) {\n            if (!set.contains(s.charAt(j))){\n                set.add(s.charAt(j++));\n                len = Math.max(len, j - i);    \n            }\n            else {\n                set.remove(s.charAt(i++));     //只需左边remove\n            }\n        }\n        return len;\n    }\n}\n</code></pre>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","more":"<h1 id=\"面试题57-II-和为s的连续正数序列-Easy\"><a href=\"https://leetcode-cn.com/problems/he-wei-sde-lian-xu-zheng-shu-xu-lie-lcof/\" target=\"_blank\" rel=\"noopener\">面试题57 - II. 和为s的连续正数序列[Easy]</a></h1>\n<p><a href=\"Slide-Window/image-20200306211403971.png\" title=\"image-20200306211403971\" class=\"gallery-item\"><img src=\"image-20200306211403971.png\" alt=\"image-20200306211403971\"></a></p>\n<h2 id=\"解法一：滑动窗口\">解法一：滑动窗口</h2>\n<p><input type=\"checkbox\" id=\"checkbox0\"><label for=\"checkbox0\">[ ]</label></p>\n<ul>\n<li>标准的滑动窗口题：如果大了左边界++，如果小了右边界++，如果正好则记录答案</li>\n<li>直接贴解法，很直观了</li>\n</ul>\n<pre><code class=\"language-java\">class Solution {\n    public int[][] findContinuousSequence(int target) {\n        List&lt;int[]&gt; list=new ArrayList&lt;int[]&gt;();\n        int lo=1,hi=1,sum=0;\n        while(lo&lt;=target/2 ){ //lo最多等于target/2\n            if(sum&lt;target){   \n                sum+=hi++;    //右边界++\n            }\n            else if(sum&gt;target){\n                sum-=lo++;    //左边界++，sum回溯\n            }\n            else{               //有解\n                int[] ans=new int[hi-lo];\n                for(int i=0;i&lt;hi-lo;i++)ans[i]=i+lo;\n                list.add(ans);\n                sum-=lo++;      //记录解之后左边界++，sum回溯\n            }\n        }\n        return list.toArray(new int[list.size()][]); //转回二维数组\n    }\n}\n</code></pre>\n<h1 id=\"3-Longest-Substring-Without-Repeating-Characters-Medium\"><a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/\" target=\"_blank\" rel=\"noopener\">3. Longest Substring Without Repeating Characters[Medium]</a></h1>\n<p><a href=\"Slide-Window/image-20200306213641525.png\" title=\"image-20200306213641525\" class=\"gallery-item\"><img src=\"image-20200306213641525.png\" alt=\"image-20200306213641525\"></a></p>\n<h1 id=\"解法二：HashSet滑动窗口\">解法二：HashSet滑动窗口</h1>\n<p>不需要回溯，当遇到重复时，只需要remove左边就行了，这样就是一次遍历</p>\n<pre><code class=\"language-java\">public class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        int n = s.length();\n        Set&lt;Character&gt; set = new HashSet&lt;&gt;();\n        int i=0, j=0,len=0;\n        while (i&lt;n &amp;&amp; j&lt;n) {\n            if (!set.contains(s.charAt(j))){\n                set.add(s.charAt(j++));\n                len = Math.max(len, j - i);    \n            }\n            else {\n                set.remove(s.charAt(i++));     //只需左边remove\n            }\n        }\n        return len;\n    }\n}\n</code></pre>\n<script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","categories":[{"name":"Algorithm","path":"api/categories/Algorithm.json"}],"tags":[{"name":"leetcode","path":"api/tags/leetcode.json"}]}