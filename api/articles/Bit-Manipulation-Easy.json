{"title":"Bit Manipulation-Easy","slug":"Bit-Manipulation-Easy","date":"2020-05-05T12:28:54.000Z","updated":"2020-05-23T14:01:27.323Z","comments":true,"path":"api/articles/Bit-Manipulation-Easy.json","excerpt":"","covers":["image-20200523215744228.png"],"content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css\"><div class=\".article-gallery\" <a id=\"more\">\n<h1 id=\"231-Power-of-Two\"><a href=\"https://leetcode-cn.com/problems/power-of-two/\" target=\"_blank\" rel=\"noopener\">231. Power of Two</a></h1>\n<p><a href=\"Bit-Manipulation-Easy/image-20200523215744228.png\" title=\"image-20200523215744228\" class=\"gallery-item\"><img src=\"image-20200523215744228.png\" alt=\"image-20200523215744228\"></a></p>\n<h2 id=\"解法一：位操作\">解法一：位操作</h2>\n<p>取出位中最右的1bit，如果等于这个数本身，则说明是2的幂</p>\n<pre><code class=\"language-cpp\">class Solution {\npublic:\n    bool isPowerOfTwo(int n) {\n        if(n == 0) return false;\n        long val = n;\n        return (val &amp; -val) == val;\n    }\n};\n</code></pre>\n<h2 id=\"解法二：位操作\">解法二：位操作</h2>\n<p>将最右的1置为0并将低位置为1</p>\n<p>如果操作后的结果和其自身与，结果为0，说明是2的幂，注意位运算的优先级比判等运算符更低</p>\n<pre><code class=\"language-cpp\">class Solution {\npublic:\n    bool isPowerOfTwo(int n) {\n        if(n == 0) return false;\n        long val = n;\n        return (val &amp; (val - 1)) == 0;\n    }\n};\n</code></pre>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","more":"<h1 id=\"231-Power-of-Two\"><a href=\"https://leetcode-cn.com/problems/power-of-two/\" target=\"_blank\" rel=\"noopener\">231. Power of Two</a></h1>\n<p><a href=\"Bit-Manipulation-Easy/image-20200523215744228.png\" title=\"image-20200523215744228\" class=\"gallery-item\"><img src=\"image-20200523215744228.png\" alt=\"image-20200523215744228\"></a></p>\n<h2 id=\"解法一：位操作\">解法一：位操作</h2>\n<p>取出位中最右的1bit，如果等于这个数本身，则说明是2的幂</p>\n<pre><code class=\"language-cpp\">class Solution {\npublic:\n    bool isPowerOfTwo(int n) {\n        if(n == 0) return false;\n        long val = n;\n        return (val &amp; -val) == val;\n    }\n};\n</code></pre>\n<h2 id=\"解法二：位操作\">解法二：位操作</h2>\n<p>将最右的1置为0并将低位置为1</p>\n<p>如果操作后的结果和其自身与，结果为0，说明是2的幂，注意位运算的优先级比判等运算符更低</p>\n<pre><code class=\"language-cpp\">class Solution {\npublic:\n    bool isPowerOfTwo(int n) {\n        if(n == 0) return false;\n        long val = n;\n        return (val &amp; (val - 1)) == 0;\n    }\n};\n</code></pre>\n<script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","categories":[],"tags":[{"name":"Leetcode","path":"api/tags/Leetcode.json"}]}