{"title":"PAT-Advanced Greedy","slug":"PAT-Advanced-Greedy","date":"2020-04-22T06:41:49.000Z","updated":"2020-05-05T13:54:23.165Z","comments":true,"path":"api/articles/PAT-Advanced-Greedy.json","excerpt":"Abstract：贪心相关，感觉都比较浅","covers":["image-20200422144329917.png"],"content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css\"><div class=\".article-gallery\" <p><strong>Abstract</strong>：贪心相关，感觉都比较浅<p></p>\n<a id=\"more\"></a>\n<h1 id=\"1037-Magic-Coupon-25分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805451374313472\" target=\"_blank\" rel=\"noopener\">1037 Magic Coupon (25分)</a></h1>\n<p><a href=\"PAT-Advanced-Greedy/image-20200422144329917.png\" title=\"image-20200422144329917\" class=\"gallery-item\"><img src=\"image-20200422144329917.png\" alt=\"image-20200422144329917\"></a></p>\n<h2 id=\"解法一：就硬排序\">解法一：就硬排序</h2>\n<p>首先目标一是要赚钱，第二是要赚尽可能多的钱，所以我们的原则是</p>\n<ul>\n<li>不干亏钱的买卖</li>\n<li>用最大的正优惠券买价值最大的商品，用最小的负优惠券买最小的负价商品</li>\n</ul>\n<p>因此读入数据的时候就把优惠券和商品正负分开读入，其次正价组降序，负价组升序，然后遍历计算最大利润就行</p>\n<pre><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;vector&gt;\n#include&lt;algorithm&gt;\n\nint n, m, c, p, sum = 0;\nstd::vector&lt;int&gt; c1, p1, c2, p2;\n\nvoid parseInput() {\n\tstd::cin &gt;&gt; n;\n\tfor (int i = 0; i &lt; n; i++) {\n\t\tstd::cin &gt;&gt; c;\n\t\tif (c &gt; 0)\n\t\t\tc1.push_back(c);\n\t\telse\n\t\t\tc2.push_back(c);\n\t}\n\n\tstd::cin &gt;&gt; m;\n\tfor (int i = 0; i &lt; m; i++) {\n\t\tstd::cin &gt;&gt; p;\n\t\tif (p &gt; 0)\n\t\t\tp1.push_back(p);\n\t\telse\n\t\t\tp2.push_back(p);\n\t}\n}\n\nint greater(int a, int b) {\n\treturn a &gt; b;\n}\n\nint main() {\n\tparseInput();\n\tstd::sort(c1.begin(), c1.end(), greater);\n\tstd::sort(p1.begin(), p1.end(), greater);\n\tstd::sort(c2.begin(), c2.end());\n\tstd::sort(p2.begin(), p2.end());\n\tfor (int i = 0; i &lt; c1.size(); i++) {\n\t\tif (i &lt; p1.size()) sum += c1[i] * p1[i];\n\t}\n\tfor (int i = 0; i &lt; c2.size(); i++) {\n\t\tif (i &lt; p2.size()) sum += c2[i] * p2[i];\n\t}\n\tstd::cout &lt;&lt; sum;\n\n}\n</code></pre>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","more":"<h1 id=\"1037-Magic-Coupon-25分\"><a href=\"https://pintia.cn/problem-sets/994805342720868352/problems/994805451374313472\" target=\"_blank\" rel=\"noopener\">1037 Magic Coupon (25分)</a></h1>\n<p><a href=\"PAT-Advanced-Greedy/image-20200422144329917.png\" title=\"image-20200422144329917\" class=\"gallery-item\"><img src=\"image-20200422144329917.png\" alt=\"image-20200422144329917\"></a></p>\n<h2 id=\"解法一：就硬排序\">解法一：就硬排序</h2>\n<p>首先目标一是要赚钱，第二是要赚尽可能多的钱，所以我们的原则是</p>\n<ul>\n<li>不干亏钱的买卖</li>\n<li>用最大的正优惠券买价值最大的商品，用最小的负优惠券买最小的负价商品</li>\n</ul>\n<p>因此读入数据的时候就把优惠券和商品正负分开读入，其次正价组降序，负价组升序，然后遍历计算最大利润就行</p>\n<pre><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;vector&gt;\n#include&lt;algorithm&gt;\n\nint n, m, c, p, sum = 0;\nstd::vector&lt;int&gt; c1, p1, c2, p2;\n\nvoid parseInput() {\n\tstd::cin &gt;&gt; n;\n\tfor (int i = 0; i &lt; n; i++) {\n\t\tstd::cin &gt;&gt; c;\n\t\tif (c &gt; 0)\n\t\t\tc1.push_back(c);\n\t\telse\n\t\t\tc2.push_back(c);\n\t}\n\n\tstd::cin &gt;&gt; m;\n\tfor (int i = 0; i &lt; m; i++) {\n\t\tstd::cin &gt;&gt; p;\n\t\tif (p &gt; 0)\n\t\t\tp1.push_back(p);\n\t\telse\n\t\t\tp2.push_back(p);\n\t}\n}\n\nint greater(int a, int b) {\n\treturn a &gt; b;\n}\n\nint main() {\n\tparseInput();\n\tstd::sort(c1.begin(), c1.end(), greater);\n\tstd::sort(p1.begin(), p1.end(), greater);\n\tstd::sort(c2.begin(), c2.end());\n\tstd::sort(p2.begin(), p2.end());\n\tfor (int i = 0; i &lt; c1.size(); i++) {\n\t\tif (i &lt; p1.size()) sum += c1[i] * p1[i];\n\t}\n\tfor (int i = 0; i &lt; c2.size(); i++) {\n\t\tif (i &lt; p2.size()) sum += c2[i] * p2[i];\n\t}\n\tstd::cout &lt;&lt; sum;\n\n}\n</code></pre>\n<script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","categories":[{"name":"Algorithm","path":"api/categories/Algorithm.json"}],"tags":[{"name":"PAT-A","path":"api/tags/PAT-A.json"}]}